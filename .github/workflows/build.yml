name: "Build and populate cache"
on:
  pull_request:
  push:
    branches:
      - master
    paths:
      - '.github/**'
      - 'ci.nix'
      - 'pkgs/**'
  schedule:
    - cron:  '43 7 * * *'
jobs:
  tests:
    strategy:
      matrix:
        nurRepo:
          - ataraxiasjel
        cachixName:
          - ataraxiadev-foss
        nixPath:
          - nixpkgs=channel:nixos-unstable
          - nixpkgs=channel:nixpkgs-unstable
          - nixpkgs=channel:nixos-24.05
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Free disk space
      uses: jlumbroso/free-disk-space@v1.3.1
      with:
        android: true
        docker-images: true
        dotnet: true
        haskell: true
        large-packages: false
        swap-storage: false
        tool-cache: false
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Install nix
      uses: cachix/install-nix-action@V27
      with:
        nix_path: "${{ matrix.nixPath }}"
        extra_nix_config: |
          experimental-features = nix-command flakes
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
    - name: Show nixpkgs version
      run: nix-instantiate --eval -E '(import <nixpkgs> {}).lib.version'
    - name: Setup cachix
      uses: cachix/cachix-action@v15
      if: ${{ matrix.cachixName != '<YOUR_CACHIX_NAME>' }}
      with:
        name: ${{ matrix.cachixName }}
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: Update packages
      if: (github.event_name == 'schedule') && (matrix.nixPath == 'nixpkgs=channel:nixos-unstable')
      run: |
        export GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
        export TMPDIR=$(pwd)/tmp
        mkdir -p $TMPDIR
        nix eval --json --impure --expr '(import ./ci.nix {}).updatablePkgsNames' | jq -rc '.[]' | while read i; do ./update.py -P $i || true; done
    - name: Check evaluation
      run: |
        nix-env -f ./pkgs/default.nix -qa \* --meta --xml \
          --allowed-uris https://static.rust-lang.org \
          --option restrict-eval true \
          --option allow-import-from-derivation true \
          --drv-path --show-trace \
          -I nixpkgs=$(nix-instantiate --find-file nixpkgs) \
          -I $PWD
    - name: Build nix packages
      run: nix shell -f '<nixpkgs>' nix-build-uncached -c nix-build-uncached ci.nix -A cacheOutputs
    - name: Push changes
      uses: stefanzweifel/git-auto-commit-action@v5
      if: (github.event_name == 'schedule') && (matrix.nixPath == 'nixpkgs=channel:nixos-unstable')
      with:
        commit_message: Automated package updates
        file_pattern: 'pkgs/**'
    - name: Trigger NUR update
      if: ${{ matrix.nurRepo != '<YOUR_REPO_NAME>' }}
      run: curl -XPOST "https://nur-update.nix-community.org/update?repo=${{ matrix.nurRepo }}"
